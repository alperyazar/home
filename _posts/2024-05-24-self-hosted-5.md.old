---
# License: CC-BY-SA-4.0.
title: "Ekip Veriminizi Arttıracak, OFFLINE Çalışabilen 5 Araç"
excerpt: "Bu yazıda offline da çalışabilen ve çalışma veriminizi arttıracağını düşündüğüm 5 araçtan bahsediyorum."
image: /assets/img/24/12.jpg
#imageyt: sO_Sdf09DiY
toc: true
axseq: 12
published: false
tags:
  - tr
---

Bireysel olarak veya bir ekip ile çalışırken kullandığımız çeşitli yazılım ve
araçlar çalışma hızımızı ve verimimizi ciddi bir biçimde arttırabiliyor. Bu
yazımda bireysel veya ekip olarak kullanabileceğiniz çeşitli araçlardan
bahsedeceğim.

Araçların ortak özellikleri

1. Web tabanlı olmaları yani internet tarayıcısı üzerinden kullanılmaları,
2. İnternete bağlı olmayan ortamda, **on prem**, **on premise** yani **self hosted**
   çalışabilmeleri. Bu sayede **ürettiğiniz ve sakladığınız tüm verileri sizde
   tutabiliyor olmaları,**
3. Hepsinin **Docker** imajlarının olması sebebiyle rahat bir şekilde
   çalıştırılabilmesi

olacaktır.

Bu yazıda araçların kurulumlarını ve kullanımlarını detaylı bir şekilde
anlatmayacağım. Kurulum talimatları zaten her aracın kendi sitesinde yer
almaktadır. Kullanımlarının da size ne kadar uygun olup olmadığını denemeden
bilemezsiniz. Ama ben en az 1 tanesini beğeneceğinizi düşünüyorum.

Yazının sonunda bu araçları kullanmak için basit bir altyapı önerisinden de
bahsedeceğim. Eğer [r/homelab](https://www.reddit.com/r/homelab/) ve
[r/selfhosted](https://www.reddit.com/r/selfhosted/) tutkunları da geldiyse
gelin araçlara bir bakalım…

## 1 - Mattermost

![Mattermost](/assets/img/24/12-mm.jpg){:.centered .lazyload}

[Mattermost](https://mattermost.com/), özünde bir chat uygulaması,
[Slack](https://slack.com/)'e benzetebiliriz. Ücreti karşılığında doğrudan kendi
altyapıları üzerinden de Mattermost'u kullanabiliyorsunuz. Fakat self-hosted
seçeneği de mevcut. Burada ise hem `Free` hem de `Professional` paket var. Free
paketin çeşitli limitleri mevcut fakat birçok kullanım senaryosu için yeterli
olacağını düşünüyorum.

Bakınız: [Mattermost Pricing](https://mattermost.com/pricing/)

Uygulamada temelde **takımlar** ve bu takımların altında **kanallar** yani chat
odaları oluşturuyorsunuz. Örneğin her proje için takımlar veya projeler için
kanallar oluşturabilirsiniz, bu sizin yoğurt yeme şeklinize bağlı.

Kanallardaki konuşmalar saklanıyor. Kanala daha sonra eklediğiniz kişi,
geçmişteki konuşmaları okuyabiliyor.

Bunun dışında benim pek tecrübe etmediğim
[Playbooks](https://mattermost.com/playbooks/) isminde bir otomasyon altyapısı
da bulunuyor.

DevOps, CI/CD alanında yer alan bir çok araçlar [entegre
edilebiliyor.](https://mattermost.com/marketplace/) Çeşitli araçların **bot**
hesaplarını da ekleyerek birçok işi Mattermost üzerinden
[ChatOps](https://docs.gitlab.com/ee/ci/chatops/) yaklaşımı ile
yapabiliyorsunuz. Eğer entegrasyon ile uğraşırsanız Mattermost'u tüm işlerinizi
yapabileceğiniz bir merkez olarak kullanabilirsiniz.

Aracı ister web üzerinden isterse bilgisayarınıza kuracağınız kendi istemci
yazılımı ile kullanabiliyorsunuz. Kapsamlı bir araç olduğu için tüm
özelliklerini anlatmam kolay olmayacak, o yüzden niyetiniz var ise denemenizi
veya videolarını izlemenizi tavsiye ederim.

**Bedava sürümünün çeşitli kısıtları** olduğundan bahsetmiştim. Önemli
kısıtlarından biri kanallardaki konuşmaların export edilememesi, yani HTML veya
PDF gibi bir formatta kanaldaki konuşmaları çıkartamıyorsunuz. Diğer bir limiti
ise Active Directory, LDAP gibi Single Sign-On (SSO) altyapılarının ücretsiz
sürümde olmaması. Fakat ücretsiz sürüm login tarafında Gitlab ile (self-hosted
olabilir) entegre olabiliyor ve zaten çalışan bir Gitlab var ise, ki kendisi
LDAP ile entegre edilmiş olabilir, kullanıcıları buradan login edebilirsiniz. Bu
durumda dolaylı yoldan Mattermost da LDAP ile entegre edilmiş olacaktır. Bunun
dışında tipik kullanımda ücretsiz sürüm size ciddi bir kısıt getirmeyecektir.

**Alternatif olarak** da [rocket.chat](https://www.rocket.chat/) ya da
[matrix.org](https://matrix.org/) araçlarına da bakabilirsiniz. Elbette her
aracın kendine has bir kullanım tarzı, artı ve eksileri oluyor. O yüzden sizin
veya ekbinizin ihtiyaçlarına ve tarzına uygun doğru aracı bulmak için denemeler
yapmak gerekiyor.

[Docker](https://docs.mattermost.com/install/install-docker.html) veya [diğer
yollar](https://docs.mattermost.com/guides/deployment.html) ile kurulum
yapabilirsiniz.

## 2 - Jirafeau

![Jirafeau](/assets/img/24/12-jirafeau.jpg){:.centered .lazyload}

[Jirafeau](https://gitlab.com/mojo42/Jirafeau), geçici dosya depolama ve
transfer imkanı sağlıyor. [send.vis.ee](https://send.vis.ee/) nin PHP ile
yazılmış self-hosted versiyonu olarak düşünebilirsiniz. Örneğin arkadaşınıza bir
dosya göndereceksiniz, dosyanın boyutu büyük ve mail atamıyorsunuz ya da küçük
olsa bile mail kotasını doldurmak istemiyorsunuz. Jirafeau'ya yüklediğiniz zaman
size verdiği tekil, unique, linki paylaştığınız kişiler dosyayı indiriyor. Bir
süre sonra veya ilk indirmeden sonra ya da silme linkini kullanınca dosya
siliniyor.

[Docker](https://hub.docker.com/r/mojo42/jirafeau/)

## 3 - Excalidraw ❤️

![Excalidraw](/assets/img/24/12-excalidraw.jpg){:.centered .lazyload}

[excalidraw.com](https://excalidraw.com/) un neredeyse aynısını self-hosted
olarak çalıştırabilirsiniz. Daha çok toplantılarda, ekran paylaştığınız
durumlarda hızlı çizimler yapmak için ya da taslak bir şeyler çizmek için
kullanabilirsiniz. Varsayılan olarak el yazısı tarzı
[Virgil](https://virgil.excalidraw.com/) isimli bir yazı stili var,
değiştirebiliyorsunuz. Benim favori araçlarımdan biri.

[Docker](https://hub.docker.com/r/excalidraw/excalidraw)

## 4 - draw.io

![draw.io](/assets/img/24/12-drawio.jpg){:.centered .lazyload}

[draw.io](https://www.drawio.com/) ünlü çizim araçlarından biri. Excalidraw'a
kıyasla daha "resmi" çizimler oluşturmaya yarıyor. Microsoft Visio alternatifi
gibi düşünebilirsiniz.

draw.io'nun zaten [masaüstü versiyonu
mevcut.](https://github.com/jgraph/drawio-desktop/releases) Fakat dilerseniz web
üzerinden de self-hosted olarak kullanabilirsiniz.

[Docker](https://hub.docker.com/r/jgraph/drawio)

## 5 - CyberChef

![draw.io](/assets/img/24/12-cc.jpg){:.centered .lazyload}

Son olarak bahsedeceğim araç [CyberChef](https://gchq.github.io/CyberChef/),
**The Cyber Swiss Army Knife** olarak geçiyor. Var olan birçok minik modülü
arka arkaya koyarak yeni şeyler *pişirebiliyorsunuz.* Kullanımı biraz da hayal
gücünüze kalıyor. Nasıl çalıştığını anlamak için kurcalamanız gerekiyor!

[Docker](https://github.com/gchq/CyberChef/pkgs/container/cyberchef)

---

## Docker Compose ve Reverse Proxy

Yazıyı bitirmeden önce minik bir altyapı önerisinde bulunmak istiyorum.

Birçok araç çalıştıracağınız zaman bunları ayrı ayrı `docker run` ile
çalıştırmak yerine bilgilerinin bir `YAML` içerisinde bulunacağı [Docker
Compose](https://docs.docker.com/compose/) kullanmanızı öneririm. Bu sayede
yeniden başlatma ve konfigürasyon değiştirme işlerinde işleriniz daha kolay
olur.

Araçları web üzerinden erişilebilir kılmak için çalıştırdığınız sunucu makinenin
çeşitli portlarını *publish* etmek gerekiyor. Kendi bilgisayarınızda
çalıştırıyorsanız sorun değil ama bir ekip olarak kullanıyorsanız araçları
`http://makineadı:port` şeklinde açmak yerine **Reverse Proxy** kullanmanızı
öneririm. Bu durumda her aracın kendi URL'si olacaktır. Örneğin
`cyberchef.domain.abc`, `drawio.domain.abc` gibi. Bu sayede aracın adresi
değişmeden arka planda değişiklik, sunucu ismi gibi yapabilirsiniz. Bu durumda
port publish etmeniz de gerekmiyor. Elbette burada Docker Swarm ya da Kubernetes
gibi daha kompleks çözümler kullanabilirsiniz fakat basit bir kullanım
senaryosunu anlatıyorum.

**Reverse Proxy** nin bir avantajı da **SSL termination** ya da **ForwardAuth**
gibi altyapıları kurabilmenize imkan sağlaması olacaktır. Örneğin Jirafeau
servisini herkesin kullanmasını istemeyebilirsiniz. Fakat bu aracın kendine bir
login mekanizması yok. İşte bu servisi bir Reverse Proxy arkasına alır ve
ForwardAuth ile bir Authentication mekanizması kurarsanız bu servisi bir
kullanıcı adı/şifre veya başka bir login mekanizması ile koruyabilirsiniz.

Kullanabileceğiniz birçok reverse proxy mevcut,
[Traefik](https://github.com/traefik/traefik), [Nginx Proxy
Manager](https://nginxproxymanager.com/) gibi. Yine her zaman olduğu gibi
temelde aynı işi yapsalar da kullanım ve problem çözme tarzları farklı.

Faydalı olması dileği ile…
